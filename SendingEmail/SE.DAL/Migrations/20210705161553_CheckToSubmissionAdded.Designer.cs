// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SE.DAL.EF;

namespace SE.DAL.Migrations
{
    [DbContext(typeof(SubmissionResultContext))]
    [Migration("20210705161553_CheckToSubmissionAdded")]
    partial class CheckToSubmissionAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SE.DAL.Entities.MessageInfo", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.HasKey("MessageId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SE.DAL.Entities.SubmissionResult", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Check")
                        .HasColumnType("integer");

                    b.Property<string>("FailedMessage")
                        .HasColumnType("text");

                    b.Property<int>("MessageID")
                        .HasColumnType("integer");

                    b.Property<string>("Recipients")
                        .HasColumnType("text");

                    b.Property<string>("Result")
                        .HasColumnType("text");

                    b.HasKey("ResultId");

                    b.HasIndex("MessageID");

                    b.ToTable("SubmissionsResult");
                });

            modelBuilder.Entity("SE.DAL.Entities.SubmissionResult", b =>
                {
                    b.HasOne("SE.DAL.Entities.MessageInfo", "Message")
                        .WithMany("submissionResults")
                        .HasForeignKey("MessageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("SE.DAL.Entities.MessageInfo", b =>
                {
                    b.Navigation("submissionResults");
                });
#pragma warning restore 612, 618
        }
    }
}
